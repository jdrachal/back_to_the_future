// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/fs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/fs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mypackage {

namespace {

const ::google::protobuf::Descriptor* File_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  File_reflection_ = NULL;
const ::google::protobuf::Descriptor* Directory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Directory_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_proto_2ffs_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_proto_2ffs_2eproto() {
  protobuf_AddDesc_proto_2ffs_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "proto/fs.proto");
  GOOGLE_CHECK(file != NULL);
  File_descriptor_ = file->message_type(0);
  static const int File_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, data_filename_),
  };
  File_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      File_descriptor_,
      File::default_instance_,
      File_offsets_,
      -1,
      -1,
      -1,
      sizeof(File),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, _is_default_instance_));
  Directory_descriptor_ = file->message_type(1);
  static const int Directory_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Directory, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Directory, directory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Directory, file_),
  };
  Directory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Directory_descriptor_,
      Directory::default_instance_,
      Directory_offsets_,
      -1,
      -1,
      -1,
      sizeof(Directory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Directory, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Directory, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_proto_2ffs_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      File_descriptor_, &File::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Directory_descriptor_, &Directory::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_proto_2ffs_2eproto() {
  delete File::default_instance_;
  delete File_reflection_;
  delete Directory::default_instance_;
  delete Directory_reflection_;
}

void protobuf_AddDesc_proto_2ffs_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_proto_2ffs_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016proto/fs.proto\022\tmypackage\032 google/prot"
    "obuf/descriptor.proto\"7\n\004File\022\022\n\004name\030\001 "
    "\001(\tB\004\200\246\035\001\022\033\n\rdata_filename\030\002 \001(\tB\004\200\246\035\001\"s"
    "\n\tDirectory\022\022\n\004name\030\001 \001(\tB\004\200\246\035\001\022-\n\tdirec"
    "tory\030\002 \003(\0132\024.mypackage.DirectoryB\004\200\246\035\001\022#"
    "\n\004file\030\003 \003(\0132\017.mypackage.FileB\004\200\246\035\001:=\n\024s"
    "erialize_to_ostream\022\035.google.protobuf.Fi"
    "eldOptions\030\340\324\003 \001(\010b\006proto3", 306);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto/fs.proto", &protobuf_RegisterTypes);
  File::default_instance_ = new File();
  Directory::default_instance_ = new Directory();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    &::google::protobuf::FieldOptions::default_instance(),
    60000, 8, false, false);
  File::default_instance_->InitAsDefaultInstance();
  Directory::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_proto_2ffs_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_proto_2ffs_2eproto {
  StaticDescriptorInitializer_proto_2ffs_2eproto() {
    protobuf_AddDesc_proto_2ffs_2eproto();
  }
} static_descriptor_initializer_proto_2ffs_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File::kNameFieldNumber;
const int File::kDataFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File::File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mypackage.File)
}

void File::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

File::File(const File& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mypackage.File)
}

void File::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

File::~File() {
  // @@protoc_insertion_point(destructor:mypackage.File)
  SharedDtor();
}

void File::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void File::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* File::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return File_descriptor_;
}

const File& File::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffs_2eproto();
  return *default_instance_;
}

File* File::default_instance_ = NULL;

File* File::New(::google::protobuf::Arena* arena) const {
  File* n = new File;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File::Clear() {
// @@protoc_insertion_point(message_clear_start:mypackage.File)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mypackage.File)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mypackage.File.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data_filename;
        break;
      }

      // optional string data_filename = 2;
      case 2: {
        if (tag == 18) {
         parse_data_filename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_filename().data(), this->data_filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mypackage.File.data_filename"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mypackage.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mypackage.File)
  return false;
#undef DO_
}

void File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mypackage.File)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mypackage.File.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string data_filename = 2;
  if (this->data_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_filename().data(), this->data_filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mypackage.File.data_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data_filename(), output);
  }

  // @@protoc_insertion_point(serialize_end:mypackage.File)
}

::google::protobuf::uint8* File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mypackage.File)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mypackage.File.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string data_filename = 2;
  if (this->data_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_filename().data(), this->data_filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mypackage.File.data_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data_filename(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mypackage.File)
  return target;
}

int File::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mypackage.File)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string data_filename = 2;
  if (this->data_filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_filename());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mypackage.File)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const File* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mypackage.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mypackage.File)
    MergeFrom(*source);
  }
}

void File::MergeFrom(const File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mypackage.File)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data_filename().size() > 0) {

    data_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_filename_);
  }
}

void File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mypackage.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mypackage.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {

  return true;
}

void File::Swap(File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File::InternalSwap(File* other) {
  name_.Swap(&other->name_);
  data_filename_.Swap(&other->data_filename_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata File::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = File_descriptor_;
  metadata.reflection = File_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// File

// optional string name = 1;
void File::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& File::name() const {
  // @@protoc_insertion_point(field_get:mypackage.File.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void File::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mypackage.File.name)
}
 void File::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mypackage.File.name)
}
 void File::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mypackage.File.name)
}
 ::std::string* File::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mypackage.File.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* File::release_name() {
  // @@protoc_insertion_point(field_release:mypackage.File.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void File::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mypackage.File.name)
}

// optional string data_filename = 2;
void File::clear_data_filename() {
  data_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& File::data_filename() const {
  // @@protoc_insertion_point(field_get:mypackage.File.data_filename)
  return data_filename_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void File::set_data_filename(const ::std::string& value) {
  
  data_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mypackage.File.data_filename)
}
 void File::set_data_filename(const char* value) {
  
  data_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mypackage.File.data_filename)
}
 void File::set_data_filename(const char* value, size_t size) {
  
  data_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mypackage.File.data_filename)
}
 ::std::string* File::mutable_data_filename() {
  
  // @@protoc_insertion_point(field_mutable:mypackage.File.data_filename)
  return data_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* File::release_data_filename() {
  // @@protoc_insertion_point(field_release:mypackage.File.data_filename)
  
  return data_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void File::set_allocated_data_filename(::std::string* data_filename) {
  if (data_filename != NULL) {
    
  } else {
    
  }
  data_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_filename);
  // @@protoc_insertion_point(field_set_allocated:mypackage.File.data_filename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Directory::kNameFieldNumber;
const int Directory::kDirectoryFieldNumber;
const int Directory::kFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Directory::Directory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mypackage.Directory)
}

void Directory::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Directory::Directory(const Directory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:mypackage.Directory)
}

void Directory::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Directory::~Directory() {
  // @@protoc_insertion_point(destructor:mypackage.Directory)
  SharedDtor();
}

void Directory::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Directory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Directory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Directory_descriptor_;
}

const Directory& Directory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_proto_2ffs_2eproto();
  return *default_instance_;
}

Directory* Directory::default_instance_ = NULL;

Directory* Directory::New(::google::protobuf::Arena* arena) const {
  Directory* n = new Directory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Directory::Clear() {
// @@protoc_insertion_point(message_clear_start:mypackage.Directory)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  directory_.Clear();
  file_.Clear();
}

bool Directory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mypackage.Directory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mypackage.Directory.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_directory;
        break;
      }

      // repeated .mypackage.Directory directory = 2;
      case 2: {
        if (tag == 18) {
         parse_directory:
          DO_(input->IncrementRecursionDepth());
         parse_loop_directory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_directory()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_directory;
        if (input->ExpectTag(26)) goto parse_loop_file;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .mypackage.File file = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_file:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_file()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_file;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mypackage.Directory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mypackage.Directory)
  return false;
#undef DO_
}

void Directory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mypackage.Directory)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mypackage.Directory.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .mypackage.Directory directory = 2;
  for (unsigned int i = 0, n = this->directory_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->directory(i), output);
  }

  // repeated .mypackage.File file = 3;
  for (unsigned int i = 0, n = this->file_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->file(i), output);
  }

  // @@protoc_insertion_point(serialize_end:mypackage.Directory)
}

::google::protobuf::uint8* Directory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mypackage.Directory)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mypackage.Directory.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .mypackage.Directory directory = 2;
  for (unsigned int i = 0, n = this->directory_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->directory(i), false, target);
  }

  // repeated .mypackage.File file = 3;
  for (unsigned int i = 0, n = this->file_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->file(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:mypackage.Directory)
  return target;
}

int Directory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:mypackage.Directory)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .mypackage.Directory directory = 2;
  total_size += 1 * this->directory_size();
  for (int i = 0; i < this->directory_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->directory(i));
  }

  // repeated .mypackage.File file = 3;
  total_size += 1 * this->file_size();
  for (int i = 0; i < this->file_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->file(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Directory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mypackage.Directory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Directory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Directory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mypackage.Directory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mypackage.Directory)
    MergeFrom(*source);
  }
}

void Directory::MergeFrom(const Directory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mypackage.Directory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  directory_.MergeFrom(from.directory_);
  file_.MergeFrom(from.file_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Directory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mypackage.Directory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Directory::CopyFrom(const Directory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mypackage.Directory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Directory::IsInitialized() const {

  return true;
}

void Directory::Swap(Directory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Directory::InternalSwap(Directory* other) {
  name_.Swap(&other->name_);
  directory_.UnsafeArenaSwap(&other->directory_);
  file_.UnsafeArenaSwap(&other->file_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Directory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Directory_descriptor_;
  metadata.reflection = Directory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Directory

// optional string name = 1;
void Directory::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Directory::name() const {
  // @@protoc_insertion_point(field_get:mypackage.Directory.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Directory::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mypackage.Directory.name)
}
 void Directory::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mypackage.Directory.name)
}
 void Directory::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mypackage.Directory.name)
}
 ::std::string* Directory::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mypackage.Directory.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Directory::release_name() {
  // @@protoc_insertion_point(field_release:mypackage.Directory.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Directory::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mypackage.Directory.name)
}

// repeated .mypackage.Directory directory = 2;
int Directory::directory_size() const {
  return directory_.size();
}
void Directory::clear_directory() {
  directory_.Clear();
}
const ::mypackage::Directory& Directory::directory(int index) const {
  // @@protoc_insertion_point(field_get:mypackage.Directory.directory)
  return directory_.Get(index);
}
::mypackage::Directory* Directory::mutable_directory(int index) {
  // @@protoc_insertion_point(field_mutable:mypackage.Directory.directory)
  return directory_.Mutable(index);
}
::mypackage::Directory* Directory::add_directory() {
  // @@protoc_insertion_point(field_add:mypackage.Directory.directory)
  return directory_.Add();
}
::google::protobuf::RepeatedPtrField< ::mypackage::Directory >*
Directory::mutable_directory() {
  // @@protoc_insertion_point(field_mutable_list:mypackage.Directory.directory)
  return &directory_;
}
const ::google::protobuf::RepeatedPtrField< ::mypackage::Directory >&
Directory::directory() const {
  // @@protoc_insertion_point(field_list:mypackage.Directory.directory)
  return directory_;
}

// repeated .mypackage.File file = 3;
int Directory::file_size() const {
  return file_.size();
}
void Directory::clear_file() {
  file_.Clear();
}
const ::mypackage::File& Directory::file(int index) const {
  // @@protoc_insertion_point(field_get:mypackage.Directory.file)
  return file_.Get(index);
}
::mypackage::File* Directory::mutable_file(int index) {
  // @@protoc_insertion_point(field_mutable:mypackage.Directory.file)
  return file_.Mutable(index);
}
::mypackage::File* Directory::add_file() {
  // @@protoc_insertion_point(field_add:mypackage.Directory.file)
  return file_.Add();
}
::google::protobuf::RepeatedPtrField< ::mypackage::File >*
Directory::mutable_file() {
  // @@protoc_insertion_point(field_mutable_list:mypackage.Directory.file)
  return &file_;
}
const ::google::protobuf::RepeatedPtrField< ::mypackage::File >&
Directory::file() const {
  // @@protoc_insertion_point(field_list:mypackage.Directory.file)
  return file_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  serialize_to_ostream(kSerializeToOstreamFieldNumber, false);

// @@protoc_insertion_point(namespace_scope)

}  // namespace mypackage

// @@protoc_insertion_point(global_scope)
